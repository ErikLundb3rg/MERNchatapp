{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erikl\\\\onedrive\\\\skrivbord\\\\prog2020\\\\chatapp\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const ENDPOINT = \"localhost:5000\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    console.log(name, room);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, () => {}); // exiting handling\n\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", () => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); // function for sending messages\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/erikl/onedrive/skrivbord/prog2020/chatapp/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","messages","setMessages","message","setMessage","ENDPOINT","parse","search","console","log","emit","off","on","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AAGA,QAAMe,QAAQ,GAAG,gBAAjB;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBP,WAAW,CAACc,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAAvB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ,EAAkBE,IAAlB;AACAL,IAAAA,MAAM,GAAGD,EAAE,CAACY,QAAD,CAAX;AAEAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACgB,IAAP,CAAY,MAAZ,EAAoB;AAAEb,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAoC,MAAM,CACzC,CADD,EATY,CAYZ;;AACA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACgB,IAAP,CAAY,YAAZ;AAEAhB,MAAAA,MAAM,CAACiB,GAAP;AACH,KAJD;AAKH,GAlBQ,EAkBN,CAACN,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAlBM,CAAT;AAoBAhB,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,MAAM,CAACkB,EAAP,CAAU,SAAV,EAAqB,MAAM;AACvBV,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcE,OAAd,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIN,CAACF,QAAD,CAJM,CAAT,CA7B2B,CAmC3B;;AACA,sBACI;AAAK,IAAA,SAAS,EAAG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,KAAK,EAAIE,OADb;AAEI,IAAA,QAAQ,EAAKU,KAAD,IAAWT,UAAU,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAWH,CA/CD;;AAkDA,eAAepB,IAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport queryString from \"query-string\"\r\nimport io from \"socket.io-client\"\r\n\r\nlet socket; \r\n\r\nconst Chat = ({ location }) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [room, setRoom] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n\r\n    const ENDPOINT = \"localhost:5000\"\r\n\r\n    useEffect(() => {\r\n        const { name, room } = queryString.parse(location.search)\r\n        \r\n        console.log(name, room) \r\n        socket = io(ENDPOINT)\r\n\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        socket.emit(\"join\", { name, room }, () => {\r\n        });\r\n\r\n        // exiting handling\r\n        return () => {\r\n            socket.emit(\"disconnect\");\r\n\r\n            socket.off()\r\n        }\r\n    }, [ENDPOINT, location.search]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"message\", () => {\r\n            setMessages([...messages, message])\r\n        })\r\n    }, [messages])\r\n\r\n    // function for sending messages\r\n    return (\r\n        <div className = \"outerContainer\">\r\n            <div className = \"container\"> \r\n                <input \r\n                    value = {message}\r\n                    onChange = {(event) => setMessage(event.target.value)}\r\n                \r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Chat"]},"metadata":{},"sourceType":"module"}